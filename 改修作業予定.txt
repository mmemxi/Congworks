===============================================
●2018/10/26(バージョン3.01据置)
修正内容
・ヒストリー機能を廃止
・SQliteモジュールの導入
・SQlite化の初期段階として、報告書発行ログ(reportlog.txt)をテーブル(ReportLogs)に置換

実施予定：2018/10/28
実施日：2018/10/28済
===============================================
●2018/10/29（バージョン3.02）
修正内容
・XAMPP側で、テキストファイルを介さず標準出力で処理結果を取得する方法に切り替え
・トークンIDの生成処理を追加
①トークンIDはSQliteテーブル「CWTokens」で生成する。通し番号(TokenNo、Long型）で８桁の値とし、生成するごとに＋１する。
②Quicky側では、起動時にトークンIDがLocalコンフィグに保存されていなければ生成し保存。
③Congworks側では、ログイン時にトークンIDが保存されていなければ生成し保存。ローカルストレージに保存する。
④Xampp側プログラムで、テキストファイルを介さず標準出力で処理結果を返すテスト。※主要な変更点

実施予定：2018/11/1（木）
実施日：2018/11/1済
===============================================
●2018/11/2（バージョン3.03）
・Congworks共通モジュール化の開始
①会衆区域貸し出し(rent.wsf)
②会衆区域キャンセル(cancelpp.wsf)
③個人区域貸し出し(rentB.wsf)
④個人区域キャンセル(cancel.wsf)
⑤アパート区域貸し出し(rentA.wsf)
⑥アパート区域キャンセル(cancel.wsf)
・ユーザー名(users.txt,users2.txt)をデータベース化する
  rent.wsf		貸し出し時、ユーザー名をテーブルに更新する
  verify.wsf	users.txtからユーザー一覧を取得するのではなく、テーブルから取得するように変更
  setup.js		CreateUsersを実行することでセットアップ（すでに作成済）
  menu1.js		UserPad(),UserPad2()を変更、DeleteUPad1,DeleteUPad2を変更
  file.js		UserFile(),UserFile2()を廃止する
  rentA.wsf		個人ユーザー名をCWUsersに登録する
  rentB.wsf		個人ユーザー名をCWUsersに登録する

※モジュールの共通仕様：
・congworksフォルダ下で完結する。他のフォルダにあるファイルを使用しない。
・ただしSQlite関係のファイルは除く。
・処理内容は引数で制御する。引数先頭にトークンIDを必ず渡す。
・処理結果はc:\temp\quicky\トークンID.txtに返す。
・呼び出し＆結果受け取りは、RunWSF(cmd)関数で行なう。

以下の部分はおいおい追加していく。
⑪個人区域一覧データの取得
⑫アパート区域一覧データの取得

実施予定：2018/11/8
実施日：2018/11/8
===============================================
●2018/11/10（バージョン3.04）
・ベースをcongworks側とし、XAMPPの基準ディレクトリとする
・会衆区域リストをSQlite化する(PublicList) セットアップはCreatePublicList()で行なう
・Quickyの区域一覧をテーブル(PublicList)から取得するよう変更
・Quicky:区域のログ更新処理の際、テーブルPublicListを更新する処理を追加する(savelog)
・Quicky:SaveConfig関数の中に、CreatePiblicList_One(num)を呼び出す個所を追加することにより、カード情報の更新に連動してSQliteを更新する
  （カード情報の変更、特記情報の追加、アパートの追加・変更）
・Congworksのnewlist.wsfのデータ取得方法を、ディレクトリからのフォルダ一覧取得ではなく、SQliteテーブル(PublicList)からの取得にする
・ForceEndをディレクトリ一覧からではなく、PublicListから処理する
・Ezraをバッチファイル非依存、相対ディレクトリに対応させる
・ReadJSON,WriteJSONを実装する（最初に導入したのはspot.xmlの内容。引数は(会衆番号,"spots","")の３つ
・ConfigAll及びキャンペーン情報をJSONに保存する方式に切り替える（現時点では併用とし、最終的に旧ファイルを廃止する）
・PHPからwsfを呼び出す処理を廃止していく。まずはnewlist.wsf,verify.wsfを廃止。SQlite化が進むにつれ順次置換していく。
・BuildingFormatテーブルを新設。（今のところ定義だけ）
・区域ログファイル(log.xml)をSQlite化(PublicLogs)
・menu1.js/LoadCardからCheckCardLog処理の呼び出しを除去する。（作業済）
・MENU1にあるSQ_Readで読んだ値を使用状況に転化して返す関数として独立させる。これをmenu1から文化させる最初の部分とする。(rent.js/getPublicLogs)
・PDFPrinter.jsの並列起動抑制がまだ効いていない→htaアプリに変更
・Congworksの名前に空白が含まれている場合に除去する処理が働いていない→修正(index.php,pp/index.phpの２か所)
・CheckCardLogによって作られているCards[num].プロパティの項目を廃止し、他の項目に置換する。CheckCardLog自体を廃止。
	Cards[num].status=nowstatus;	//->廃止済
	Cards[num].lastuse=lastuse;		//->廃止済
	Cards[num].Available=avail;		//->廃止済
	Cards[num].Blank=luse;			//->廃止済
	Cards[num].NowUsing=nowusing;	//->廃止済
	Cards[num].LastUser=lastuser;	//->廃止済
・CreateSummaryofPerson関係は、CongworksもQuickyもサマリ処理に問題があるので要改善（改善済）
・GetOverDayもログを読んでいたので廃止

実施予定：2018/11/18
実施日：2018/11/19
===============================================
●2018/11/22（バージョン3.05）
・config.xmlをSQlite化→テーブル「Cards」を新設(2018/11/25)
  LoadCard,SaveConfig,ConfigXML()を撤去
  mapgen.js,personal.js,summary.jsから撤去済。
・marker.xmlをSQlite化
  marker.jsからはLoadMarker,SaveMarkerを修正。PopMarkerHistory,PushMarkerHistoryは撤去(congworks側からしか使わないから)
  他の個所から「MarkerFile()」およびmarker.xmlを参照している箇所を撤去済
・markerhistory.xmlをSQlite化
  PushMarkerHistory,PopMarkerHistoryはrent.wsfとcancelpp.wsfしか使用していない
  ヒストリーは貸し出し日をキーとする（会衆番号＋区域番号＋地図番号＋貸し出し日でユニーク）
  PushMarkerHistory,PopMarkerHistoryに引数３（開始日）を追加
・getcwtoken.wsfを廃止。index.php,pp/index.phpで自前処理で生成するようにした。
・再編成処理からヒストリーデータの整理を除外（3.04の残留バグ）
・長期留守宅一覧をperson.txtから取得するよう変更。menu6.js。requestB.wsfと同じ処理になるよう改良した。
・アパートの使用状況がすべて未使用になってしまうバグが発生。アパートログの再編成時、最終行に空白が入ってしまうことが原因。修正済


実施予定：2018/12/1
実施日：
===============================================
●後続バージョン
・アパートログ(*.txt)をSQlite化(PersonalApart)←個人用アパートだけが対象。アパートXMLとアパートログを一体にしたテーブル。
・CreateSummaryofApartmentはApartLogsから作成するように変更
・rentA.wsf、cancel.wsfはApartLogsを更新対象に
・menu3.jsの再編成メニューで、アパートログをテキストファイルでなくSQliteテーブルに変更



・再編成処理でlog.xml,config.xml,marker.xml,markerhistory.xmlを削除する
・マーカーログ(marker.xml)をSQlite化
・カード情報(config.xml)をSQlite化
・building.xml（カード別にある）をテーブルに変更する。(テーブル名：BuildingFormat)
・アパートおよび集合住宅の追加時、既存の物件名と同じにすることは許されない。物件名の変更時も他の物件と同じにできない。（会衆内で）
・サマリー情報(apartment.txt,person.txt)の生成処理をSQliteに置換する。
・menu1.jsをメンテ部と貸し出し部に分ける
・ビル構造をすべてbuildingフォルダに統一する
・アパート区域、前回から-1日が対象になっていないバグを修正
