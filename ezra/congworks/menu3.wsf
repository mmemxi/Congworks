<job>
<script language="JavaScript" src="./lib/common.js"></script>
<script language="JavaScript" src="./lib/file.js"></script>
<script language="JavaScript">
//----------------------------------------------------------------
// menu3.wsf ラックの情報を取得する
// 引数１：年月（数値６桁）
//----------------------------------------------------------------
var nenget=WScript.Arguments(0);
nenget=nenget.trim();
//----------------------------------------------------------------
// ラックファイルを検索する
//----------------------------------------------------------------
var i,s,obj,filename,ext,basename,yearnum;
var dir=fso.GetFolder(RackFolder());
var files=new Enumerator(dir.Files);
var years=new Array();
var latest=-1;
yearnum=0;
for(; !files.atEnd(); files.moveNext())
	{
	obj=files.item();
	filename=obj.Name+"";
	ext=fso.GetExtensionName(filename).toLowerCase();
	if (ext!="csv") continue;
	basename=fso.GetBaseName(filename);
	if (isNaN(basename)) continue;
	i=parseInt(basename,10);
	years.push(i);
	yearnum++;
	}
s="<select size=1 onchange='ChangeRackList(this.value)'>";
years.sort(CreateRackList_Sort);
for(i=0;i<yearnum;i++)
	{
	s+="<option value="+years[i];
	if ((latest==-1)&&(years[i]<=nenget))
		{
		latest=years[i];	//	今回の検索対象を発見
		s+=" selected";
		}
	s+=">"+years[i]+"</option>";
	}
s+="</select>";
var text=s+"\n";
//----------------------------------------------------------------
// 指定年月のラックファイルを取得する
//----------------------------------------------------------------
if (fso.FileExists(RackFile(latest)))
	{
	text+=ReadFile(RackFile(latest));
	}
Results(text);
WScript.quit();
//----------------------------------------------------------------
function Results(result)
	{
	WScript.StdOut.Write(result);
	}
function CreateRackList_Sort(a,b)
	{
	return b-a;
	}
</script>
</job>
